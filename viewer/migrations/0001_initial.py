# Generated by Django 4.2.17 on 2024-12-11 22:06

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DataStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year_month", models.DateField()),
                ("file_type", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Dose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.CharField(max_length=255, null=True),
                            size=3,
                        ),
                        help_text="Array of [year_month, quantity, unit] entries",
                        null=True,
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=30, unique=True)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="IngredientQuantity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.CharField(max_length=255, null=True),
                            size=3,
                        ),
                        help_text="Array of [year_month, quantity, unit] entries",
                        null=True,
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Measure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("short_name", models.CharField(max_length=255, null=True)),
                ("slug", models.SlugField(null=True, unique=True)),
                ("description", models.TextField(null=True)),
                ("why_it_matters", models.TextField()),
                ("how_is_it_calculated", models.TextField(null=True)),
                ("sql_file", models.CharField(max_length=255)),
                ("draft", models.BooleanField(default=True)),
                (
                    "quantity_type",
                    models.CharField(
                        choices=[
                            ("dose", "Dose"),
                            ("ingredient", "Ingredient Quantity"),
                        ],
                        default="dose",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MeasureReason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reason", models.CharField(max_length=255)),
                ("description", models.TextField(null=True)),
                ("colour", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MeasureVMP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("numerator", "Numerator"),
                            ("denominator", "Denominator"),
                        ],
                        max_length=20,
                    ),
                ),
                ("unit", models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OntFormRoute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ods_code", models.CharField(max_length=10, unique=True)),
                ("ods_name", models.CharField(max_length=255)),
                ("region", models.CharField(max_length=100)),
                ("icb", models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OrgSubmissionCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("month", models.DateField()),
                ("has_submitted", models.BooleanField()),
                ("vmp_count", models.IntegerField(null=True)),
                ("quantity_count", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PrecomputedMeasure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("month", models.DateField()),
                ("quantity", models.FloatField(null=True)),
                ("numerator", models.FloatField(null=True)),
                ("denominator", models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PrecomputedMeasureAggregated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=255, null=True)),
                ("month", models.DateField()),
                ("quantity", models.FloatField(null=True)),
                ("numerator", models.FloatField(null=True)),
                ("denominator", models.FloatField(null=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("region", "Region"),
                            ("icb", "ICB"),
                            ("national", "National"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrecomputedPercentile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("month", models.DateField()),
                ("percentile", models.IntegerField()),
                ("quantity", models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=30, unique=True)),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="VTM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vtm", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["vtm"], name="viewer_vtm_vtm_de5e73_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="VMP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=30, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("form", models.CharField(max_length=255, null=True)),
                (
                    "ingredients",
                    models.ManyToManyField(
                        null=True, related_name="vmps", to="viewer.ingredient"
                    ),
                ),
                (
                    "ont_form_routes",
                    models.ManyToManyField(
                        null=True, related_name="vmps", to="viewer.ontformroute"
                    ),
                ),
                (
                    "routes",
                    models.ManyToManyField(
                        null=True, related_name="vmps", to="viewer.route"
                    ),
                ),
                (
                    "vtm",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vmps",
                        to="viewer.vtm",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SCMDQuantity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.CharField(max_length=255, null=True),
                            size=3,
                        ),
                        help_text="Array of [year_month, quantity, unit] entries",
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scmd_quantities",
                        to="viewer.organisation",
                    ),
                ),
                (
                    "vmp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scmd_quantities",
                        to="viewer.vmp",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="route",
            index=models.Index(fields=["code"], name="viewer_rout_code_e7cb68_idx"),
        ),
        migrations.AddField(
            model_name="precomputedpercentile",
            name="measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="precomputed_percentiles",
                to="viewer.measure",
            ),
        ),
        migrations.AddField(
            model_name="precomputedmeasureaggregated",
            name="measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="precomputed_measures_aggregated",
                to="viewer.measure",
            ),
        ),
        migrations.AddField(
            model_name="precomputedmeasure",
            name="measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="precomputed_measures",
                to="viewer.measure",
            ),
        ),
        migrations.AddField(
            model_name="precomputedmeasure",
            name="organisation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="precomputed_measures",
                to="viewer.organisation",
            ),
        ),
        migrations.AddField(
            model_name="orgsubmissioncache",
            name="organisation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="viewer.organisation"
            ),
        ),
        migrations.AddField(
            model_name="orgsubmissioncache",
            name="successor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="successors",
                to="viewer.organisation",
            ),
        ),
        migrations.AddField(
            model_name="organisation",
            name="successor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="predecessors",
                to="viewer.organisation",
            ),
        ),
        migrations.AddField(
            model_name="measurevmp",
            name="measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="measure_vmps",
                to="viewer.measure",
            ),
        ),
        migrations.AddField(
            model_name="measurevmp",
            name="vmp",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="measure_vmps",
                to="viewer.vmp",
            ),
        ),
        migrations.AddField(
            model_name="measure",
            name="reason",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="measures",
                to="viewer.measurereason",
            ),
        ),
        migrations.AddField(
            model_name="measure",
            name="vmps",
            field=models.ManyToManyField(
                related_name="measures", through="viewer.MeasureVMP", to="viewer.vmp"
            ),
        ),
        migrations.AddField(
            model_name="ingredientquantity",
            name="ingredient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient_quantities",
                to="viewer.ingredient",
            ),
        ),
        migrations.AddField(
            model_name="ingredientquantity",
            name="organisation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient_quantities",
                to="viewer.organisation",
            ),
        ),
        migrations.AddField(
            model_name="ingredientquantity",
            name="vmp",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient_quantities",
                to="viewer.vmp",
            ),
        ),
        migrations.AddIndex(
            model_name="ingredient",
            index=models.Index(fields=["code"], name="viewer_ingr_code_e99281_idx"),
        ),
        migrations.AddField(
            model_name="dose",
            name="organisation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="doses",
                to="viewer.organisation",
            ),
        ),
        migrations.AddField(
            model_name="dose",
            name="vmp",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="doses",
                to="viewer.vmp",
            ),
        ),
        migrations.AddIndex(
            model_name="vmp",
            index=models.Index(fields=["code"], name="viewer_vmp_code_985c09_idx"),
        ),
        migrations.AddIndex(
            model_name="vmp",
            index=models.Index(fields=["vtm"], name="viewer_vmp_vtm_id_c977f2_idx"),
        ),
        migrations.AddIndex(
            model_name="scmdquantity",
            index=models.Index(
                fields=["vmp", "organisation"], name="viewer_scmd_vmp_id_0c3d1c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="scmdquantity",
            unique_together={("vmp", "organisation")},
        ),
        migrations.AddIndex(
            model_name="precomputedpercentile",
            index=models.Index(
                fields=["measure", "month", "percentile"],
                name="viewer_prec_measure_ef2864_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="precomputedpercentile",
            unique_together={("measure", "month", "percentile")},
        ),
        migrations.AddIndex(
            model_name="precomputedmeasureaggregated",
            index=models.Index(
                fields=["measure", "category", "label", "month"],
                name="viewer_prec_measure_97a1da_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="precomputedmeasureaggregated",
            unique_together={("measure", "category", "label", "month")},
        ),
        migrations.AddIndex(
            model_name="precomputedmeasure",
            index=models.Index(
                fields=["measure", "organisation", "month"],
                name="viewer_prec_measure_81a373_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="precomputedmeasure",
            unique_together={("measure", "organisation", "month")},
        ),
        migrations.AlterUniqueTogether(
            name="orgsubmissioncache",
            unique_together={("organisation", "month")},
        ),
        migrations.AddIndex(
            model_name="organisation",
            index=models.Index(
                fields=["ods_name"], name="viewer_orga_ods_nam_e7cb65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organisation",
            index=models.Index(
                fields=["ods_code"], name="viewer_orga_ods_cod_8298ae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="measurevmp",
            index=models.Index(
                fields=["measure", "type"], name="viewer_meas_measure_8dabb8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="measurevmp",
            index=models.Index(fields=["vmp"], name="viewer_meas_vmp_id_e64177_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="measurevmp",
            unique_together={("measure", "vmp", "type")},
        ),
        migrations.AddIndex(
            model_name="ingredientquantity",
            index=models.Index(
                fields=["vmp", "organisation", "ingredient"],
                name="viewer_ingr_vmp_id_0bfa89_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="ingredientquantity",
            unique_together={("ingredient", "vmp", "organisation")},
        ),
        migrations.AddIndex(
            model_name="dose",
            index=models.Index(
                fields=["vmp", "organisation"], name="viewer_dose_vmp_id_2a807b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dose",
            unique_together={("vmp", "organisation")},
        ),
    ]
